{"expireTime":9007200845574950000,"key":"transformer-remark-markdown-html-888f6a5bad34a49b7aec0a1751eb050e-gatsby-plugin-sharpgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-emojis-","val":"<p>Istioで複数アプリケーションのホスティングするのに詰まったので、記事にしておきます。\nIstio自体の導入については<a href=\"http://techeten.xyz/10305\">前回の記事</a>などをご参考ください。</p>\n<h2>問題</h2>\n<p>前回の記事で導入したのと同じように</p>\n<ul>\n<li>別のNamespaceを新たに作成し、Istio injectionを有効化</li>\n<li>そこに新しいFQDN用のGatewayとVirtualServiceを作成</li>\n</ul>\n<p>して、新しいFQDN用のリソースをIstioで受けられるようにしたかったのですが、どうしてもできないのです。</p>\n<p>いろいろ試して実験してみたところ、</p>\n<ul>\n<li>VirtualServiceは、自分が所属するNamespace内に存在するGatewayにしか紐づけできない</li>\n<li>複数のGatewayを複数のNamespaceにデプロイすると、最初にデプロイしたGatewayに記載のあるFQDNしか名前解決ができない</li>\n</ul>\n<p>ということがわかりました。</p>\n<p>異なるアプリケーションは別のNamespaceで管理したかったため、全部を一つのNamespaceで管理することは避けたく、原因を調査しました。\n(全て同じNamespace内にデプロイする方法は<a href=\"https://preliminary.istio.io/docs/tasks/traffic-management/secure-ingress/#configure-a-tls-ingress-gateway-for-multiple-hosts\">公式のドキュメントに記載があります</a>)</p>\n<h2>原因: GatewayリソースはNamespace間で共通</h2>\n<p>今回の問題の調査として大いに参考になったのが<a href=\"https://groups.google.com/forum/#!topic/istio-users/QFUcc4AV4Jk\">こちらのGoogle groupのディスカッション</a>。</p>\n<blockquote>\n<p>gateways are not namespaced -they are common across all namespaces.</p>\n</blockquote>\n<p>これが全てでした。Gatewayは複数デプロイすると互いに干渉するようです。\n(<a href=\"https://github.com/istio/istio/issues/6046\">Issue</a>も立っていますが、仕様かバグかよくわからない)</p>\n<p>じゃあNamespace分割するにはどうしたらいいんだ…？と思ったのですが、kube-dnsを使えば解決できます。\nk8s内のリソースの名前解決は</p>\n<pre class=\"lang:yaml decode:true \"><service-name>.<cluster-namespace>.svc.cluster.local</cluster-namespace></service-name></pre>\n<p>が使えるので、これをVirtualService > destination > host に記載すれば、Namespaceをまたいでサービスディスカバリが可能になります。</p>\n<p>コードでは下記の感じです。</p>\n<pre class=\"lang:yaml decode:true \">apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n name: common-istio-gateway\nspec:\n selector:\n   istio: ingressgateway # use istio default controller\n servers:\n - port: #マルチドメインの場合は、certificateなどを別名で(another-tls.crtなど)Secretとしてデプロイし、この項目を増やしていく\n     number: 443\n     name: https\n     protocol: HTTPS\n   tls:\n     mode: SIMPLE\n     serverCertificate: /etc/istio/ingressgateway-certs/tls.crt\n     privateKey: /etc/istio/ingressgateway-certs/tls.key\n   hosts:\n   - my-app1.example.com\n   - my-app2.example.com\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n name: my-app1\nspec:\n hosts:\n - my-app1.example.com\n gateways:\n - common-istio-gateway\n http:\n - route:\n   - destination:\n       host:\n         my-service1.my-app1.svc.cluster.local\n       port:\n         number: 80\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n name: my-app2\nspec:\n hosts:\n - my-app2.example.com\n gateways:\n - common-istio-gateway\n http:\n - route:\n   - destination:\n       host:\n         my-service2.my-app2.svc.cluster.local\n       port:\n         number: 80\n</pre>\n<p>Namespaceをまたいで共通のリソースなので、全てdefault namespaceにデプロイすることにします。\nこれで無事マルチホスティングができました。</p>\n<h2>補足</h2>\n<p>さきほどのディスカッションにて</p>\n<blockquote>\n<p>Also, I would suggest launching different gateway controllers for each gateway spec, instead of adding multiple gateways to the same controller (istio: ingressgateway).</p>\n</blockquote>\n<p>ということが述べられており、Controllerを複数作成することで複数Gatewayも可能のようですが、まだ試していません。</p>"}