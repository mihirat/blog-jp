{"expireTime":9007200845577683000,"key":"transformer-remark-markdown-html-dc83dabd2b5784d7e86846b05177c692-gatsby-plugin-sharpgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-emojis-","val":"<p>日本語の情報が全然ないうえ、英語の情報もけっこう少なくてわかりにくかったので\nPeter Corke氏のRobotic Toolboxの使い方を紹介したいと思います。チュートリアルっぽく。</p>\n<h2>Robotics Toolboxとは</h2>\n<p>無料で使える、ロボットのシミュレーション用のモデルやその運動の計算関数などがまとめて提供されているライブラリ。ロボットのモデルを作る、逆運動学や動力学の計算をする、動作のアニメーションをとる、などが簡単にできます。\nネットに出回っているような動力学の式を書く必要もないので、すぐにシミュレーションに移れます。あらかじめロボットのモデルもいくつか提供されており、ほんとにすぐに使えます。マジ便利。</p>\n<h3>始めかた</h3>\n<p><a href=\"http://petercorke.com/Robotics_Toolbox.html\">Robotics Toolbox ダウンロードサイト</a>\nまず上記サイトへ行き、“Downloading Toolbox”の項から文章中のリンク”here”をクリックする。\n学生、企業社会人、その他など選択して登録する。\n<a href=\"http://techeten.xyz/wp-content/uploads/2015/10/Robot.png\"><img src=\"http://techeten.xyz/wp-content/uploads/2015/10/Robot-300x137.png\" alt=\"Robot\"></a></p>\n<p>登録するとzipがダウンロードできる。解凍して、“rvctools” ごとまとめてMatlabの好きなディレクトリに移動。\nMatlab上で使うときは、右クリックして「パスに追加　＞　選択フォルダとサブフォルダ」を使うか、\nrvctools > startup_rvs.m を走らせる。</p>\n<h3>モデルの作り方</h3>\n<p>基本的にはDHパラメータ記法に従って記述する…らしいがよくわからないので探り探り。\nロボットのモデルを作るには、SerialLinkという関数に、足したい自由度の数だけLinkオブジェクトを渡します。\nとりあえず３自由度アームのサンプルコードを：</p>\n<p>[matlab]\nfunction robot = generate3DoF()</p>\n<p>% robot length values, mass, diameter\nlen = [0 50 50];　%次の関節までの長さ。一つの部位に複数自由度を持たせる時は、(自由度数-1)だけ0が続く\nmass = 1.0;　%関節同士を繋ぐ円柱の質量。今回は全部同じ値\ndia = 2.0; % 円柱の直径</p>\n<p>% inertia matrix: 慣性マトリクス。対角成分だけあれば一応動力学のトルク計算は出来るらしい\nIxx = (dia^2 / 4 + len.^2 /12 ) * mass;\nIyy = Ixx;\nIzz = mass * dia^2 / 2;\n% 関節の可動範囲指定。デフォルト（無指定）は[]と等しい\njointFix = [-1.5 1.5];</p>\n<p>%% Link params\nL(1) = Revolute(‘m’, mass, ‘I’, [Ixx(1), Iyy(1), Izz],‘r’,[0,0,len(1)/2], ‘qlim’,jointFix,‘alpha’, pi/2, ‘a’, len(1), ‘d’, 0);\nL(2) = Revolute(‘m’, mass, ‘I’, [Ixx(2), Iyy(2), Izz],‘r’,[0,0,len(2)/2],‘qlim’,[],‘alpha’, 0, ‘a’, len(2), ‘d’, 0);\nL(3) = Revolute(‘m’, mass, ‘I’, [Ixx(3), Iyy(3), Izz],‘r’,[0,0,len(3)/2],‘qlim’,[],‘alpha’, -pi/2, ‘a’, len(3), ‘d’, 0);</p>\n<p>% build a serial link manipulator</p>\n<p>robot = SerialLink(L, ‘name’, ‘3DoF’);\n[/matlab]</p>\n<p>これを\n[matlab]\nrobot = generate3DoF();\nrobot.plot([0 0 0]);　% 各自由度の初期値\n[/matlab]</p>\n<p>みたいに実行して</p>\n<p><a href=\"http://techeten.xyz/wp-content/uploads/2015/10/3DoF.png\"><img src=\"http://techeten.xyz/wp-content/uploads/2015/10/3DoF-300x251.png\" alt=\"3DoF\"></a></p>\n<p>こういう画面が出ればOKです。</p>\n<h3>コードの補足説明</h3>\n<p>Linkのパラメータですが、\nRevolute：指定すると回転軸不一致、指定しないとprismaticになって同じ軸で回転。\nr:質量中心の座標\na,alpha,d: DHパラメータ系の値。thetaはplotするときに指定すればよい\nrobot.plot:各関節の初期角度値を指定。figureで表示。plotやscatter3も同じfigで追加表示できる</p>\n<p>モデルの作り方のイメージは、\nひとつの関節の先端から継ぎ足して次の関節を生やしていく感じです。\n他にもいくつかロボットのモデルが予め用意されているので(ex: mdl<em>baxter,mdl</em>naoなど)　それも見てみると非常に参考になるでしょう。</p>\n<p>また、rvctools > robots > robot.pdf　が全てのマニュアルになってます（あんまり詳しくない）\n読んで調べれば大体分かるんですが分かりにくいので　次回、逆運動学などよく使う関数系の注意点などまとめてみます。</p>"}